# -*- coding: utf-8 -*-
"""
Created on Tue Oct 13 00:42:03 2015

@author: Stef
"""
# Standard Imports
import numpy as np
import pandas as pd


#Visualisation Imports
import seaborn as sns
from pylab import savefig
import matplotlib.pyplot as plt
from datetime import datetime
import datetime
import time
from sklearn import preprocessing
from pandas import Series,DataFrame
from sklearn import preprocessing
from sklearn.feature_extraction import DictVectorizer
from sklearn.preprocessing import OneHotEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.linear_model import LinearRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
from sklearn.feature_extraction import DictVectorizer as DV
from sklearn.preprocessing import StandardScaler
from sklearn.grid_search import GridSearchCV,RandomizedSearchCV
from scipy.stats import randint, uniform
from sklearn.metrics import mean_squared_error
from sklearn.datasets import load_boston
from sklearn.ensemble import RandomForestRegressor
from sklearn.grid_search import GridSearchCV
from sklearn.cross_validation import train_test_split




train  = pd.read_csv('../input/train.csv')
test = pd.read_csv('../input/train.csv')
Store_Data = pd.read_csv('../input/store.csv')


X_train = pd.DataFrame.merge(train, Store_Data, left_on='Store', right_on='Store', how='outer')
X_test = pd.DataFrame.merge(train, Store_Data, left_on='Store', right_on='Store', how='outer')

y = X_train.Sales
columns = X_train.columns
test_ind =X_test.index

#print (train.head())
#print (train.describe())
#print (X_train.info())
#print (Store_Data.info())


    ###Seperate Date into several Columns###

Dates = X_train.Date.str.split('-').apply(pd.Series)
#Dates = int(Dates)
Dates.columns = ['Year','Month','Day']
#[int('Year'),int('Month'),int('Day')]
X_train = pd.concat([X_train, Dates], axis = 1)
X_train.drop('Date',axis=1, inplace=True)
        #print (Dates.head())
#print (X_train.head())


Dates = X_test.Date.str.split('-').apply(pd.Series)
Dates.columns = ['Year','Month','Day']
X_test = pd.concat([X_test, Dates], axis = 1)
X_test.drop('Date',axis=1, inplace=True)
print (Dates.head())
        #print (X_train.head())
